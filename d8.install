<?php

/**
 * @file
 * Install, update and uninstall functions for the d8 installation profile.
 */

use Drupal\Core\Config\FileStorage;
use Drupal\Core\Config\InstallStorage;
use Drupal\Core\Site\Settings;
use Drupal\d8\Form\D8CaptchaForm;
use Drupal\d8\Form\D8ConfigureForm;

/**
 * Implements hook_install().
 */
function d8_install() {
  $modules = [
    'd8_feature_settings',
    'd8_feature_menus',
    'd8_feature_blocks_seven',
    'd8_feature_blocks_d8_theme',
    'd8_ban',
    'd8_standwithukraine',
    'recaptcha',
  ];

  /** @var \Drupal\Core\Extension\ModuleExtensionList $extension */
  $extension = \Drupal::service('extension.list.module');

  if ($extension->exists($module = 'config2php')) {
    $modules[] = 'd8_' . $module;
  }

  /** @var \Drupal\Core\Extension\ModuleInstallerInterface $installer */
  $installer = \Drupal::service('module_installer');

  $installer->install($modules);

  /** @var \Drupal\Core\Extension\ExtensionPathResolver $resolver */
  $resolver = \Drupal::service('extension.path.resolver');

  $path = sprintf(
    '%s/%s',
    $resolver->getPath('module', 'd8_captcha'),
    InstallStorage::CONFIG_INSTALL_DIRECTORY
  );

  foreach ((new FileStorage($path))->listAll() as $name) {
    \Drupal::configFactory()->getEditable($name)->delete();
  }

  $installer->install(['d8_captcha'], FALSE);

  // Populate the default shortcut set.
  $shortcut = \Drupal::entityTypeManager()->getStorage('shortcut')->create([
    'shortcut_set' => 'default',
    'title' => t('Features'),
    'weight' => -20,
    'link' => [
      'uri' => 'internal:/admin/config/development/features',
    ],
  ]);

  $shortcut->save();

  $sandbox = [];

  d8_update_8006($sandbox);
  d8_update_8903();
}

/**
 * Implements hook_install_tasks().
 */
function d8_install_tasks(&$install_state) {
  return [
    'install_captcha_form' => [
      'display_name' => t('Set up captcha settings'),
      'type' => 'form',
      'function' => D8CaptchaForm::class,
    ],
  ];
}

/**
 * Implements hook_install_tasks_alter().
 */
function d8_install_tasks_alter(&$tasks, $install_state) {
  $tasks['install_configure_form']['function'] = D8ConfigureForm::class;
}

/**
 * Install "Config Override" module.
 */
function d8_update_8001() {
  \Drupal::service('module_installer')->install(['config_override']);
}

/**
 * Install "reCAPTCHA" module.
 */
function d8_update_8002() {
  \Drupal::service('module_installer')->install(['recaptcha']);
}

/**
 * Install "D8 Captcha" module.
 */
function d8_update_8003() {
  $config = \Drupal::configFactory()->getEditable('recaptcha.settings');

  $items = [
    'secret_key' => NULL,
    'site_key' => NULL,
  ];

  foreach ($items as $key => &$item) {
    $item = $config->get($key);
  }

  unset($item);

  \Drupal::service('module_installer')->install(['d8_captcha']);

  foreach ($items as $key => $item) {
    $config->set($key, $item);
  }

  $config->save();
}

/**
 * Install "D8 Ban" module.
 */
function d8_update_8004() {
  \Drupal::service('module_installer')->install(['d8_ban']);
}

/**
 * Install "Config Export to PHP array" module.
 */
function d8_update_8005() {
  \Drupal::service('module_installer')->install(['config2php']);
}

/**
 * Grant access to the search tab for a role with access to toolbar.
 */
function d8_update_8006(&$sandbox) {
  if (!isset($sandbox['total'])) {
    $sandbox['total'] = \Drupal::entityQuery('user_role')->count()->execute();
    $sandbox['offset'] = 0;
    $sandbox['limit'] = Settings::get('entity_update_batch_size', 50);
  }

  $role_ids = \Drupal::entityQuery('user_role')
    ->range($sandbox['offset'], $sandbox['limit'])
    ->execute();

  $roles = \Drupal::entityTypeManager()->getStorage('user_role')
    ->loadMultiple($role_ids);

  /** @var \Drupal\user\RoleInterface $role */
  foreach ($roles as $role_id => $role) {
    if (
      $role->hasPermission('access toolbar') &&
      !$role->hasPermission('use admin toolbar search')
    ) {
      user_role_grant_permissions($role_id, ['use admin toolbar search']);
    }
  }

  $sandbox['offset'] += count($role_ids);
  $sandbox['#finished'] = $sandbox['offset'] / $sandbox['total'];
}

/**
 * Install "D8 Config Export to PHP array" module.
 */
function d8_update_8901() {
  \Drupal::service('module_installer')->install(['d8_config2php']);
}

/**
 * Enable news mode.
 */
function d8_update_8902() {
  \Drupal::configFactory()->getEditable('update.settings')
    ->set('news', TRUE)
    ->save();
}

/**
 * Set features bundle of installation profile as default.
 */
function d8_update_8903() {
  \Drupal::state()->set('features.current_bundle', 'd8');
}

/**
 * Delete records of split versions.
 */
function d8_update_8904() {
  \Drupal::database()->delete('key_value')
    ->condition('collection', 'state')
    ->condition(
      'name',
      \Drupal::database()->escapeLike('update.versions.') . '%',
      'LIKE'
    )
    ->execute();
}

/**
 * Uninstall "Config Override" module.
 */
function d8_update_9301() {
  \Drupal::service('module_installer')->uninstall(['config_override'], FALSE);
}

/**
 * Install "StandWithUkraine" module.
 */
function d8_update_9302() {
  \Drupal::service('module_installer')->install(['standwithukraine']);
}

/**
 * Install "D8+ StandWithUkraine" module.
 */
function d8_update_9303() {
  \Drupal::service('module_installer')->install(['d8_standwithukraine']);
}

/**
 * Install "Upgrade Status" module.
 */
function d8_update_9401() {
  /** @var \Drupal\Core\Extension\ModuleExtensionList $extension */
  $extension = \Drupal::service('extension.list.module');

  if ($extension->exists($module = 'upgrade_status')) {
    \Drupal::service('module_installer')->install([$module]);
  }
}

/**
 * Install "Contextual Links" module.
 */
function d8_update_9402() {
  \Drupal::service('module_installer')->install(['contextual']);
}

/**
 * Update Features bundle configuration.
 */
function d8_update_9501() {
  /** @var \Drupal\Core\Extension\ModuleExtensionList $extension */
  $extension = \Drupal::service('extension.list.module');

  $path = $extension->getPath($name = 'd8') . '/config/install';
  $data = (new FileStorage($path))->read($name = 'features.bundle.' . $name);

  /** @var \Drupal\Core\Config\CachedStorage $storage */
  $storage = \Drupal::service('config.storage');

  $storage->write($name, (array) $data);
}

/**
 * Uninstall "Upgrade Status" module.
 */
function d8_update_9502() {
  /** @var \Drupal\Core\Extension\ModuleExtensionList $extension */
  $extension = \Drupal::service('extension.list.module');

  if ($extension->exists($module = 'upgrade_status')) {
    /** @var \Drupal\Core\Extension\ModuleInstallerInterface $installer */
    $installer = \Drupal::service('module_installer');

    $installer->uninstall([$module], FALSE);
  }
}
